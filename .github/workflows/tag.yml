name: Tag Release Workflow

on:
  push:
    tags:
      - '*' # Trigger on any tag push.
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  distribute-release:
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest
    
    ### Set variables for the given component.
    ### See https://github.com/pulumi-pequod/pequod-policies/shared-github-actions/action.yml for the full list of supported inputs.
    env:
      # Need to manage the list of component types that this component repo provides.
      # FUTURE HOPE: Deduce this by parsing the component code or, better yet, be able to get this
      # via a Pulumi Cloud API after publishing.
      COMPONENT_TYPES: '["random-abstracted:index:PetAbstracted"]'
      PULUMI_ORG: 'pulumi-pequod' # The Pulumi organization to publish the component to.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Checkout the specific tag that triggered the workflow
          fetch-depth: 0 # Ensures the build matches the git tag.

      # Uses Pulumi Cloud Github OIDC issuer
      # Note that if adding a new component and copying this code, you will need to update the
      # github oidc issuer stack that is used in the org to manage the issuers.
      - name: Authenticate to Pulumi
        uses: pulumi/auth-actions@v1
        with:
          organization: ${{ env.PULUMI_ORG }}
          requested-token-type: urn:pulumi:token-type:access_token:organization
          scope: admin  # Need admin privileges - the github oidc issuer is configured to allow this scope

      ### Tag Push Steps
      # Publish if this is a tag push.
      - name: Publish Component to Pulumi Org
        if: github.event_name == 'push'
        run: |
          echo "Publishing latest component version to the ${{ env.PULUMI_ORG }} Pulumi org."
          pulumi package publish https://github.com/${{ github.repository }} --publisher ${{ env.PULUMI_ORG }}

      # Update the policy config with the new component version.
      - name: Update Policy Config
        if: github.event_name == 'push'
        uses: pulumi-pequod/pequod-policies/shared-github-actions/component-version-policy-config@v1
        with:
          component_types: ${{ env.COMPONENT_TYPES }}
          component_version: ${{ github.ref_name }}
      ### End Tag Push Steps

      ### Manual Run Steps
      # No publishing for manual runs, but we still want to update the policy config with the latest version.
      # Get latest tag for manual runs
      - name: Manual Run - Get latest tag
        if: github.event_name == 'workflow_dispatch'
        id: latest_tag
        run: |
          LATEST_TAG=$(git tag --sort=-version:refname | head -1)
          echo "Latest tag: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Skip publishing if the workflow is manually triggered.
      - name: Manual run - Update policy config with latest tag
        if: github.event_name == 'workflow_dispatch'
        uses: pulumi-pequod/pequod-policies/shared-github-actions/component-version-policy-config@v1
        with:
          component_types: ${{ env.COMPONENT_TYPES }}
          component_version: ${{ steps.latest_tag.outputs.tag }}
