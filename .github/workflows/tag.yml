name: Tag Release Workflow

on:
  push:
    tags:
      - '*' # Trigger on any tag push.
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  distribute-release:
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest
    
    ### Set these environment variables for the given component.
    ### POLICY_PACK is the name of the policy pack that contains the checks for the component version. This will be the same value for the entire Pulumi org.
    ### COMPONENT_TYPES lists is the list of component types that THIS component repo provides.
    env:
      COMPONENT_TYPES: '["random-abstracted:index:PetAbstracted"]'
      POLICY_PACK: "platform-team"
      PULUMI_ORG: "pequod"
      PULUMI_API_ENDPOINT: "https://api.pulumi.com"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Checkout the specific tag that triggered the workflow
          fetch-depth: 0 # Ensures the build matches the git tag.

      # Uses Pulumi Cloud Github OIDC issuer
      # Note that if adding a new component and copying this code, you will need to update the
      # github oidc issuer stack that is used in the org to manage the issuers.
      - name: Authenticate to Pulumi
        uses: pulumi/auth-actions@v1
        with:
          organization: ${{ env.PULUMI_ORG }}
          requested-token-type: urn:pulumi:token-type:access_token:organization
          scope: admin  # Need admin privileges - the github oidc issuer is configured to allow this scope

      # Publish if this is a tag push.
      # Todo: Either deduce or use a variable for the pulumi org passed to the --publisher flag.
      - name: Publish Component to Pulumi Org
        if: github.event_name == 'push'
        run: |
          echo "Publishing latest component version to the ${{ env.PULUMI_ORG }} Pulumi org."
          pulumi package publish https://github.com/${{ github.repository }} --publisher ${{ env.PULUMI_ORG }}

      - name: Update Policy Config
        if: github.event_name == 'push'
        env:
          PULUMI_API_ENDPOINT: ${{ env.PULUMI_API_ENDPOINT }}
          PULUMI_ORG: ${{ env.PULUMI_ORG }}
          COMPONENT_TYPES: ${{ env.COMPONENT_TYPES }}
          COMPONENT_VERSION: ${{ github.ref_name }}
        run: python ./.github/workflows/update_policy_config.py

      # Get latest tag for manual runs
      - name: Get latest tag
        if: github.event_name == 'workflow_dispatch'
        id: latest_tag
        run: |
          LATEST_TAG=$(git tag --sort=-version:refname | head -1)
          echo "Latest tag: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Skip publishing if the workflow is manually triggered.
      - name: Manual run - Skip publishing
        if: github.event_name == 'workflow_dispatch'
        env:
          PULUMI_API_ENDPOINT: ${{ env.PULUMI_API_ENDPOINT }}
          PULUMI_ORG: ${{ env.PULUMI_ORG }}
          COMPONENT_TYPES: ${{ env.COMPONENT_TYPES }}
          COMPONENT_VERSION: ${{ steps.latest_tag.outputs.tag }}
        run: |
          echo "This is a manual workflow run."
          echo "Skipping component publishing to prevent accidental releases."
          echo "To publish, push a new tag instead of running manually."
          echo "Using latest tag: ${{ steps.latest_tag.outputs.tag }}"
          python ./.github/workflows/update_policy_config.py
